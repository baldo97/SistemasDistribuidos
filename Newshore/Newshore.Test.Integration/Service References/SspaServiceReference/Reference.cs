//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Newshore.Test.Integration.SspaServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SspaServiceReference.ISoapService")]
    public interface ISoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/GetAllSuperPoweredEntitiesXml", ReplyAction="http://tempuri.org/ISoapService/GetAllSuperPoweredEntitiesXmlResponse")]
        NewshoreWebService.PersonType[] GetAllSuperPoweredEntitiesXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/GetAllSuperPoweredEntitiesXml", ReplyAction="http://tempuri.org/ISoapService/GetAllSuperPoweredEntitiesXmlResponse")]
        System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperPoweredEntitiesXmlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/GetAllSuperHeroesXml", ReplyAction="http://tempuri.org/ISoapService/GetAllSuperHeroesXmlResponse")]
        NewshoreWebService.PersonType[] GetAllSuperHeroesXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/GetAllSuperHeroesXml", ReplyAction="http://tempuri.org/ISoapService/GetAllSuperHeroesXmlResponse")]
        System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperHeroesXmlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/GetAllVillainsXml", ReplyAction="http://tempuri.org/ISoapService/GetAllVillainsXmlResponse")]
        NewshoreWebService.PersonType[] GetAllVillainsXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/GetAllVillainsXml", ReplyAction="http://tempuri.org/ISoapService/GetAllVillainsXmlResponse")]
        System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllVillainsXmlAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISoapServiceChannel : Newshore.Test.Integration.SspaServiceReference.ISoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapServiceClient : System.ServiceModel.ClientBase<Newshore.Test.Integration.SspaServiceReference.ISoapService>, Newshore.Test.Integration.SspaServiceReference.ISoapService {
        
        public SoapServiceClient() {
        }
        
        public SoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewshoreWebService.PersonType[] GetAllSuperPoweredEntitiesXml() {
            return base.Channel.GetAllSuperPoweredEntitiesXml();
        }
        
        public System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperPoweredEntitiesXmlAsync() {
            return base.Channel.GetAllSuperPoweredEntitiesXmlAsync();
        }
        
        public NewshoreWebService.PersonType[] GetAllSuperHeroesXml() {
            return base.Channel.GetAllSuperHeroesXml();
        }
        
        public System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperHeroesXmlAsync() {
            return base.Channel.GetAllSuperHeroesXmlAsync();
        }
        
        public NewshoreWebService.PersonType[] GetAllVillainsXml() {
            return base.Channel.GetAllVillainsXml();
        }
        
        public System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllVillainsXmlAsync() {
            return base.Channel.GetAllVillainsXmlAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SspaServiceReference.IRestService")]
    public interface IRestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAllSuperPoweredEntitiesJson", ReplyAction="http://tempuri.org/IRestService/GetAllSuperPoweredEntitiesJsonResponse")]
        NewshoreWebService.PersonType[] GetAllSuperPoweredEntitiesJson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAllSuperPoweredEntitiesJson", ReplyAction="http://tempuri.org/IRestService/GetAllSuperPoweredEntitiesJsonResponse")]
        System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperPoweredEntitiesJsonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAllSuperHeroesJson", ReplyAction="http://tempuri.org/IRestService/GetAllSuperHeroesJsonResponse")]
        NewshoreWebService.PersonType[] GetAllSuperHeroesJson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAllSuperHeroesJson", ReplyAction="http://tempuri.org/IRestService/GetAllSuperHeroesJsonResponse")]
        System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperHeroesJsonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAllVillainsJson", ReplyAction="http://tempuri.org/IRestService/GetAllVillainsJsonResponse")]
        NewshoreWebService.PersonType[] GetAllVillainsJson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAllVillainsJson", ReplyAction="http://tempuri.org/IRestService/GetAllVillainsJsonResponse")]
        System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllVillainsJsonAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestServiceChannel : Newshore.Test.Integration.SspaServiceReference.IRestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestServiceClient : System.ServiceModel.ClientBase<Newshore.Test.Integration.SspaServiceReference.IRestService>, Newshore.Test.Integration.SspaServiceReference.IRestService {
        
        public RestServiceClient() {
        }
        
        public RestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NewshoreWebService.PersonType[] GetAllSuperPoweredEntitiesJson() {
            return base.Channel.GetAllSuperPoweredEntitiesJson();
        }
        
        public System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperPoweredEntitiesJsonAsync() {
            return base.Channel.GetAllSuperPoweredEntitiesJsonAsync();
        }
        
        public NewshoreWebService.PersonType[] GetAllSuperHeroesJson() {
            return base.Channel.GetAllSuperHeroesJson();
        }
        
        public System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllSuperHeroesJsonAsync() {
            return base.Channel.GetAllSuperHeroesJsonAsync();
        }
        
        public NewshoreWebService.PersonType[] GetAllVillainsJson() {
            return base.Channel.GetAllVillainsJson();
        }
        
        public System.Threading.Tasks.Task<NewshoreWebService.PersonType[]> GetAllVillainsJsonAsync() {
            return base.Channel.GetAllVillainsJsonAsync();
        }
    }
}
